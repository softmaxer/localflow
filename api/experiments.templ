package api

script displayExperiments() {
document.addEventListener('DOMContentLoaded', () => {
  fetch('/experiments/list')
    .then(response => response.json())
    .then(data => {
      const expList = document.getElementById('exp-container');
      for (let i = 0; i < data.length; i++) {
        let card1 = document.createElement('div');
        card1.className = "card";
        let cardHeader = document.createElement('div');
        cardHeader.className = "card-header";
        cardHeader.innerHTML = data[i]["id"];
        let cardBody = document.createElement('div');
        cardBody.className = "card-body";
        let cardtitle = document.createElement('h5');
        cardtitle.className = "card-title";
        cardtitle.innerHTML = data[i]["judge"];
        let cardText = document.createElement('p');
        cardText.className = "card-text";
        cardText.innerHTML = data[i]["prompt"];
        let cardLink = document.createElement('a');
        cardLink.className = "card-link ml-5";
        let linkText = document.createTextNode('Open');
        cardLink.appendChild(linkText)
        cardLink.title = "Open";
        cardLink.href = "/experiments/" + data[i]["id"] + "/open"
        cardBody.appendChild(cardtitle);
        cardBody.appendChild(cardText);
        card1.appendChild(cardHeader);
        card1.appendChild(cardBody);
        card1.appendChild(cardLink);

        expList.appendChild(card1)
      }
    })
    .catch(error => console.error('Error:', error));
});
}

script addExpEventListener() {
  document.addEventListener('DOMContentLoaded', () => {
  document.getElementById('new-exp-form').addEventListener('submit', function(event) {
    event.preventDefault();
    const id = document.getElementById("id").value;
    const prompt = document.getElementById("prompt").value;
    const competitors = document.getElementById("competitors").value;
    const judge = document.getElementById("judge").value;
    let reqBody = JSON.stringify({"id": id, "prompt": prompt, "judge": judge, "competitors": competitors});
    let expList = document.getElementById('exp-container');
    fetch("/experiments/add", {method: 'POST', headers: {'Content-type': 'application/json'}, body: reqBody}).then(response => response.json()).then(data => {
        let card1 = document.createElement('div');
        card1.className = "card";
        let cardHeader = document.createElement('div');
        cardHeader.className = "card-header";
        cardHeader.innerHTML = data["id"];
        let cardBody = document.createElement('div');
        cardBody.className = "card-body";
        let cardtitle = document.createElement('h5');
        cardtitle.className = "card-title";
        cardtitle.innerHTML = data["judge"];
        let cardText = document.createElement('p');
        cardText.className = "card-text";
        cardText.innerHTML = data["prompt"];
        let cardLink = document.createElement('a');
        cardLink.className = "card-link ml-5";
        let linkText = document.createTextNode('Open');
        cardLink.appendChild(linkText)
        cardLink.title = "Open";
        cardLink.href = "/experiments/" + data["id"] + "/open"
        cardBody.appendChild(cardtitle);
        cardBody.appendChild(cardText);
        card1.appendChild(cardHeader);
        card1.appendChild(cardBody);
        card1.appendChild(cardLink);

        expList.appendChild(card1);
      }).catch(error => console.error('Error: ', error));
  });
  });
}

templ Experiments() {
	<html>
		<head>
			<title>Localflow</title>
			<style>

header {
  display: flex;
  justify-content: space-between;
}

nav ul {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
}

li {
    margin-right: 16px;
}

//a {
//    color: #333;
//    text-decoration: none;
//}
      </style>
			<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous"/>
			<script src="https://unpkg.com/htmx.org@1.9.2" integrity="sha384-L6OqL9pRWyyFU3+/bjdSri+iIphTN/bvYyM37tICVyOJkWZLpP2vGn6VUEXgzg6h" crossorigin="anonymous"></script>
			<script src="https://unpkg.com/htmx.org@1.9.11/dist/ext/json-enc.js"></script>
			<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
		</head>
		<body>
			@displayExperiments()
      @addExpEventListener()
			<header>
				<nav class="navbar">
					<ul>
						<li class="nav-item"><a class="nav-link" href={ templ.URL("/") }>Home</a></li>
						<li class="nav-item"><a class="nav-link" href={ templ.URL("/experiments") }>Experiments</a></li>
						<li class="nav-item"><a class="nav-link" href={ templ.URL("/") }>Boards</a></li>
					</ul>
				</nav>
			</header>
			<div class="row mt-4 g-4">
				<div class="col-8" id="exp-list">
					<h1 class="mb-4">Experiments</h1>
					<div class="exp-container" id="exp-container"></div>
				</div>
				<div class="col-4">
					<h1 class="mb-4">Start new experiment</h1>
					<form id="new-exp-form">
						<div class="mb-2">
							<label for="id">Name</label>
							<input type="text" name="id" id="id" class="form-control"/>
						</div>
						<div class="mb-3">
							<label for="prompt">Prompt</label>
							<input type="textarea" name="prompt" id="prompt" class="form-control"/>
						</div>
						<div class="mb-3">
							<label for="competitors">Competitors</label>
							<input type="textarea" name="competitors" id="competitors" class="form-control"/>
						</div>
						<div class="mb-3">
							<label for="judge">Judge model</label>
							<input type="text" name="judge" id="judge" class="form-control"/>
						</div>
						<button type="submit" class="btn btn-dark">
							<span class="spinner-border spinner-border-sm htmx-indicator" id="spinner" role="status" aria-hidden="true"></span>
							Add
						</button>
					</form>
				</div>
			</div>
		</body>
	</html>
}
